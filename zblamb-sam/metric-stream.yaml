Transform: AWS::Serverless-2016-10-31
Metadata:
  TemplateName: metric-stream

Parameters:
  # metric stream params
  ZBLambDummyDeliveryStreamBucket:
    Type: String
    AllowedPattern: arn:.*
    Description: An S3 bucket ARN, the destination of the Delivery stream. Only failed invocations of Transform Lambda will be delivered.
  ZBLambMetrics:
    Type: CommaDelimitedList
    Default: "Errors,Duration"
    Description: Comma delimited list of AWS/Lamda metrics to send to Zabbix.
  ZBLambTransformBufferingSeconds:
    Type: Number
    Description: Duration in seconds how long Metric Stream Firehose buffers data before sending them to the Transformation lambda
    MinValue: 0
    MaxValue: 900
    Default: 60
  ZBLambTransformBufferingMegabytes:
    Type: Number
    Description: Data size in MBs (2^20 B) how much Metric Stream Firehose buffers data before sending them to the Transformation lambda
    MinValue: 0.2
    MaxValue: 3
    Default: 1
  ZBLambLambdaTimeout:
    Type: Number
    Description: Timeout of the Transformation Lambda in seconds, from range 1-900 (both inclusive)
    Default: 5
    MinValue: 1
    MaxValue: 900
  ZBLambCreateMockLambda:
    Type: String
    AllowedValues:
      - "yes"
      - "no"
    Default: "yes"
    Description: Whether to create the Mock Lambda, a lambda that can fail in various ways or pass on demand
  ZBLambZabbixIP:
    Type: String
    Description: IP address or DNS name of Zabbix Server/Proxy to push data to (discovery + metrics)
    Default: ""
  ZBLambDiscoveryRate:
    Type: Number
    Description: The rate of invoking the Discovery Lambda (how often to discover functions in AWS), in minutes. Must be more than 1.
    Default: 60
    MinValue: 2
    ConstraintDescription: Must be more than 1 minute.

  # networking params
  ZBLambLambdasInVPC:
    Type: String
    AllowedValues:
      - "yes"
      - "no"
    Default: "yes"
    Description: Whether to put the Transformation and Discovery Lambdas to a VPC. Useful when Zabbix Proxy/Server is also in the same VPC.
  ZBLambPrivSubnet:
    Type: String
    Description: Id of a private (or public) subnet from which the Zabbix Server/Proxy can be reached
    Default: ""
  ZBLambVPC:
    Type: String
    Description: ID of the VPC under which to run the instances.
    Default: ""
  ZBLambZBXPortRange:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR range of IP addresses able to connect to Zabbix ports 10050 and 10051. Recommended the range of specified VPC.

Conditions:
  CreateMockLambda: !Equals
    - !Ref ZBLambCreateMockLambda
    - "yes"
  LambdasInVPC: !Equals
    - !Ref ZBLambLambdasInVPC
    - "yes"
  Defined-ZBLambPrivSubnet: !Not [ !Equals [!Ref ZBLambPrivSubnet, ""]]
  Defined-ZBLambVPC: !Not [ !Equals [!Ref ZBLambVPC, ""]]
  Defined-ZBLambZabbixIP: !Not [ !Equals [!Ref ZBLambZabbixIP, ""]]


Resources:

# VPC sec group

  ZBLambZabbixLambdaSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Condition: LambdasInVPC
    Properties:
      GroupDescription: Zabbix access
      VpcId: !If [ Defined-ZBLambVPC, !Ref ZBLambVPC, !ImportValue ZBLamb::VpcId ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 10050
          ToPort: 10050
          CidrIp: !Ref ZBLambZBXPortRange
        - IpProtocol: tcp
          FromPort: 10051
          ToPort: 10051
          CidrIp: !Ref ZBLambZBXPortRange
      Tags:
        - Key: Name
          Value: Zabbix Lambda monitor Lambda Zabbix security group
        - Key: Description
          Value: EC2 security group for Lambda functions allowing connections to ports 10050 and 10051 from parametrized IP CIDR range

# Lambdas

  ZBLambMockLambda1:
    Type: "AWS::Serverless::Function"
    Condition: CreateMockLambda
    Properties:
      FunctionName: ZBLambMockLambda1
      Description: |
        Lambda function that passes or fails on demand.
        Input: { 'result': 'pass' / 'raise' / 'fail' / 'timeout' }
      CodeUri: functions/fail_lambda/
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 2
      Policies: 
        - AWSLambdaBasicExecutionRole
      Tags:
        Name: Zabbix Lambda monitor Mock Lambda function
        Description: A sample lambda function to monitor via Zabbix. Successful call or type of failure can be invoked in the event argument.
        PRIO: 1

  ZBLambMetricStreamTransformLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/basic_handler/
      Handler: app.lambda_handler
      FunctionName: ZBLambFirehoseTransform
      Policies:
        - AWSLambdaVPCAccessExecutionRole 
        - Version: '2012-10-17'
          Statement:       
            - Effect: "Allow"
              Action: 
                - lambda:Get* # needs to get TAGs and check if AWS_PRIO_TAG, AWS_DISCOVERED_TAG are present
              Resource: '*'
      Runtime: python3.8
      Timeout: !Ref ZBLambLambdaTimeout
      Environment:
        Variables:
          ZBLAMB_PROXY_IP: !If [ Defined-ZBLambZabbixIP, !Ref ZBLambZabbixIP, !ImportValue ZBLamb::ZabbixProxyPrivateIp ]
          LOG_LEVEL: INFO
      VpcConfig: !If
        - LambdasInVPC
        - SubnetIds: !If
            - Defined-ZBLambPrivSubnet
            - - !Ref ZBLambPrivSubnet
            - - !ImportValue ZBLamb::PrivateSubnetId
          SecurityGroupIds:
            - !Ref ZBLambZabbixLambdaSecGroup
        - !Ref AWS::NoValue
      Tags:
        Name: Zabbix Lambda monitor Firehose stream transformation
        Description: Lambda function used to transform Firehose metric stream and send it to Zabbix Proxy
        PRIO: 4
        ZBLAMB_PROXY_IP: !If [ Defined-ZBLambZabbixIP, !Ref ZBLambZabbixIP, !ImportValue ZBLamb::ZabbixProxyPrivateIp ]
      
  ZBLambFunctionDiscoveryLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/discovery_handler/
      Handler: app.lambda_handler
      FunctionName: ZBLambDiscoveryLambda
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: !Sub 'rate(${ZBLambDiscoveryRate} minutes)' # 'cron(*/{ZBLambDiscoveryRate} * * * *)' < 60 minutes!
      Policies:
        - AWSLambdaVPCAccessExecutionRole 
        - Version: '2012-10-17'
          Statement:       
            - Effect: "Allow"
              Action: 
                - lambda:Get*  # get Tags and check if AWS_PRIO_TAG present
                - lambda:List* # list all functions in account
                - lambda:TagResource # tag a function as discovered in Zabbix
              Resource: '*'
      Runtime: python3.8
      Timeout: !Ref ZBLambLambdaTimeout
      Environment:
        Variables:
          ZBLAMB_PROXY_IP: !If [ Defined-ZBLambZabbixIP, !Ref ZBLambZabbixIP, !ImportValue ZBLamb::ZabbixProxyPrivateIp ]
          LOG_LEVEL: INFO
      VpcConfig: !If
        - LambdasInVPC
        - SubnetIds: !If
            - Defined-ZBLambPrivSubnet
            - - !Ref ZBLambPrivSubnet
            - - !ImportValue ZBLamb::PrivateSubnetId
          SecurityGroupIds:
            - !Ref ZBLambZabbixLambdaSecGroup
        - !Ref AWS::NoValue
      Tags:
        Name: Zabbix Lambda monitor Lambda Discovery function
        Description: Lambda function used to discover Lambda functions with priority tag inside Zabbix
        PRIO: 4
        ZBLAMB_PROXY_IP: !If [ Defined-ZBLambZabbixIP, !Ref ZBLambZabbixIP, !ImportValue ZBLamb::ZabbixProxyPrivateIp ]

# Metric Stream

  ZBLambMetricStreamFirehoseIAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement: [{
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
          }]
      Path: "/"
      Policies:
      - PolicyName: FirehorseToS3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement: [{      
                    "Effect": "Allow",      
                    "Action": [
                        "s3:AbortMultipartUpload",
                        "s3:GetBucketLocation",
                        "s3:GetObject",
                        "s3:ListBucket",
                        "s3:ListBucketMultipartUploads",
                        "s3:PutObject"
                    ],      
                    "Resource": [        
                        "Ref": "ZBLambDummyDeliveryStreamBucket",
                        "Fn::Sub": "${ZBLambDummyDeliveryStreamBucket}/*"
                    ]    
                },        
                {
                    "Effect": "Allow", 
                    "Action": [
                        "lambda:InvokeFunction", 
                        "lambda:GetFunctionConfiguration" 
                    ],
                    "Resource": [
                        "Fn::GetAtt": [ "ZBLambMetricStreamTransformLambda", "Arn" ]
                    ]
              }]
      Tags:
        - Key: Name
          Value: Zabbix Lambda monitor Mock Lambda function IAM role
        - Key: Description
          Value: IAM role of monitored Lambda functions allowing some operations for CloudWatch

  ZBLambMetricStreamFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Ref ZBLambDummyDeliveryStreamBucket
        BufferingHints:
          IntervalInSeconds: 0 # buffering after transform -- we do not care about this, all pakcets will be dropped, so flush right away
        CloudWatchLoggingOptions:
          Enabled: false
        CompressionFormat: UNCOMPRESSED
        EncryptionConfiguration: 
          NoEncryptionConfig: "NoEncryption"
        S3BackupMode: "Disabled"
        RoleARN: !GetAtt ZBLambMetricStreamFirehoseIAM.Arn

        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters: 
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt ZBLambMetricStreamTransformLambda.Arn
                - ParameterName: BufferIntervalInSeconds # buffering of MetricStream data before entering the Transform Lambda
                  ParameterValue: !Ref ZBLambTransformBufferingSeconds
                - ParameterName: BufferSizeInMBs # must be specified with time buffering
                  ParameterValue: !Ref "ZBLambTransformBufferingMegabytes"
                - ParameterName: CompressionFormat
                  ParameterValue: UNCOMPRESSED
      Tags:
        - Key: Name
          Value: Zabbix Lambda monitor Metric Delivery Stream
        - Key: Description
          Value: The Firehose stream that streams metrics from CloudWatch to the S3 bucket / HTTP Endpoint

  ZBLambMetricStreamIAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - streams.metrics.cloudwatch.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: FirehoseAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - firehose:PutRecord
            - firehose:PutRecordBatch
            Resource: !GetAtt ZBLambMetricStreamFirehose.Arn
      Tags:
        - Key: Name
          Value: Zabbix Lambda monitor Metric Stream IAM permission
        - Key: Description
          Value: IAM role of the metric stream to access the Firehose
 
  ZBLambMetricStream:
    Type: AWS::CloudWatch::MetricStream
    Properties:
      FirehoseArn: !GetAtt ZBLambMetricStreamFirehose.Arn
      RoleArn: !GetAtt ZBLambMetricStreamIAM.Arn
      OutputFormat: json
      IncludeFilters:
        - Namespace: "AWS/Lambda"
          MetricNames: !Ref ZBLambMetrics
      Tags:
        - Key: Name
          Value: Zabbix Lambda monitor Metric Stream 
        - Key: Description
          Value: The metric stream used to push AWS/Lambda Errors to Lambda pushing to Zabbix
